name: run-tests

on: [push, pull_request]
env:
    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
    tests:
        runs-on: ${{ matrix.os }}
        services:
            mysql-service:
                image: mysql:5.7
                env:
                    MYSQL_ROOT_PASSWORD: daalder
                    MYSQL_DATABASE: unit_tests
                ports:
                    - 3306
                options: >-
                    --health-cmd="mysqladmin ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest]
                php: [7.4]
                laravel: [7.*]
                dependency-version: [prefer-lowest, prefer-stable]
                include:
                    -   laravel: 7.*
                        testbench: 5.*

        name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }}

        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

#            -   name: Install SQLite 3
#                run: |
#                    sudo apt-get update
#                    sudo apt-get install sqlite3

#            -   name: Set up MySQL
#                uses: mirromutth/mysql-action@v1.1
#                with:
#                    mysql version: '5.7'
#                    mysql database: 'unit_tests'

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: curl, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, iconv
                    coverage: none

            -   name: Install dependencies
                run: |
                    composer config --global --auth http-basic.repo.packagist.com egbertwietses ${{secrets.DAALDER}}
                    composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
                    composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

            -   name: Setup Problem Matches
                run: |
                    echo "::add-matcher::${{ runner.tool_cache }}/php.json"
                    echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            -   name: Copy phpunit.xml
                run: cp phpunit.xml.dist phpunit.xml

            -   name: Execute tests
                run: vendor/bin/phpunit
                env:
                    DB_PORT: ${{ job.services.mysql.ports[3306] }}
