name: run-tests

on: [push, pull_request]
env:
    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
    tests:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest]
                php: [7.4]
                laravel: [7.*]
                dependency-version: [prefer-lowest, prefer-stable]
                include:
                    -   laravel: 7.*
                        testbench: 5.*

        name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }}

        steps:
            -   name: Start Mysql
                run: sudo /etc/init.d/mysql start

            -   name: Checkout code
                uses: actions/checkout@v2

#            -   name: Install SQLite 3
#                run: |
#                    sudo apt-get update
#                    sudo apt-get install sqlite3

            -   name: Set up MySQL
                run: |
                    sudo apt-get update
                    sudo debconf-set-selections <<< 'mysql-server-5.6 mysql-server/root_password password daalder'
                    sudo debconf-set-selections <<< 'mysql-server-5.6 mysql-server/root_password_again password daalder'
                    sudo apt-get -y install mysql-server-5.7

                    mysql -u root -p daalder -e "CREATE DATABASE unit_tests"
                    mysql -u root -p daalder -e "GRANT ALL PRIVILEGES ON unit_tests.* TO unit_tests@localhost IDENTIFIED BY 'daalder'"

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: curl, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, iconv
                    coverage: none

            -   name: Install dependencies
                run: |
                    composer config --global --auth http-basic.repo.packagist.com egbertwietses ${{secrets.DAALDER}}
                    composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
                    composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

            -   name: Setup Problem Matches
                run: |
                    echo "::add-matcher::${{ runner.tool_cache }}/php.json"
                    echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            -   name: Copy phpunit.xml
                run: cp phpunit.xml.dist phpunit.xml

            -   name: Execute tests
                run: vendor/bin/phpunit
